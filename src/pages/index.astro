---
import {
  getCleverCacheControlHeader,
  isWeekendInNorway,
} from "../clever-cache-control-header";
import Layout from "../layouts/Layout.astro";
import { getDailyMenu, parseMockKey } from "../office-app";

const maybeMock = parseMockKey(Astro.url.searchParams.get("mock"));
const isDebug =
  Boolean(maybeMock) || Astro.url.searchParams.get("debug") !== null;

const data = await getDailyMenu(maybeMock);
const first = data[0].availability;

const todaysMenu = first.find((menu) => {
  const today = new Date();
  const start = new Date(menu.period_start);
  const end = new Date(menu.period_end);

  return start <= today && today <= end;
});

Astro.response.headers.set(
  "Cache-Control",
  getCleverCacheControlHeader(Boolean(todaysMenu))
);
---

<Layout
  title="Dagens meny | Posthuset"
  description="Se dagens meny for kantinen pÃ¥ Posthuset"
>
  <main>
    <h1>Dagens meny <span class="text-gradient">Posthuset</span></h1>

    {
      !todaysMenu ? (
        isWeekendInNorway() ? (
          "Ingen meny i dag"
        ) : (
          "Menyen er ikke klar enda"
        )
      ) : (
        <>
          <time datetime={todaysMenu.period_start}>
            {new Date(todaysMenu!.period_start).toLocaleString("no-NB", {
              dateStyle: "full",
            })}
          </time>
          <ul id="dishes">
            {todaysMenu.dishes.map((dish) => (
              <li>
                <article>
                  <h2>{dish.category.name}</h2>
                  <h3>{dish.name}</h3>
                  {dish.description && (
                    <p class="description">{dish.description}</p>
                  )}
                  {dish.allergens.length > 0 && (
                    <section class="allergens">
                      <h4>Allergener:</h4>
                      <ul>
                        {dish.allergens.map((allergen) => (
                          <li>{allergen.name}</li>
                        ))}
                      </ul>
                    </section>
                  )}
                </article>
              </li>
            ))}
          </ul>
        </>
      )
    }

    {
      isDebug && (
        <>
          <hr />
          <details>
            <summary>Debug menu</summary>
            <pre>{JSON.stringify(todaysMenu, null, 2)}</pre>
          </details>
          <details>
            <summary>Debug everything</summary>
            <pre>{JSON.stringify(data, null, 2)}</pre>
          </details>
        </>
      )
    }
  </main>
</Layout>

<style>
  * {
    /* max-width: 600px; */
    color: #eaeaea;
  }

  .allergens {
    margin-top: 0.5rem;
    display: flex;
    gap: 0.4em;
  }
  .allergens h4 {
    font-size: 0.8em;
    margin: 0;
    display: inline-block;
    font-weight: normal;
  }
  .allergens ul {
    display: inline-flex;
    flex-direction: row;
    flex-wrap: wrap;
    gap: 0.5rem;

    font-size: 0.8em;
  }
  #dishes {
    margin-top: 2rem;
    display: flex;
    flex-direction: column;
    gap: 2.5rem;
  }
  h1 {
    color: white;
  }
  h2 {
    font-size: 1em;
    font-weight: 400;
    margin: 0;
  }
  h3 {
    margin: 0;
    font-size: 1.5em;
    font-weight: 400;
    line-height: 140%;
    color: #fafafa;
  }

  .description {
    margin: 0;
    margin-top: 0.5rem;
    font-size: 0.8em;
  }

  time {
    color: rgb(var(--accent-light));
  }

  pre {
    font-size: 14px;
  }
  main {
    margin: auto;
    padding: 1rem;
    width: 800px;
    max-width: calc(100% - 2rem);
    color: white;
    font-size: 20px;
    line-height: 1.6;
  }

  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }

  ul {
    list-style: none;
    padding: 0;
    margin: 0;
  }
</style>
